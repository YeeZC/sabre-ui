@mixin button-size($min-size, $padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
  min-height: $min-size;
  min-width: $min-size;
  max-height: $min-size;
}

@mixin btn-circle($min-size) {
  border-radius: $min-size / 2
}

@mixin btn-gp-style($border-radius) {
  &.ui-btn-gp-last {
    border-left: none;
    border-radius: 0 $border-radius $border-radius 0;

    &.ui-btn-dashed {
      border-left: none;
    }
  }
  &.ui-btn-gp-first {
    border-right: none;
    border-radius: $border-radius 0 0 $border-radius;

    &.ui-btn-dashed {
      border-right: $btn-border-width dashed;
    }
  }
  &.ui-btn-gp-mid {
    border-left: none;
    border-right: none;
    border-radius: 0;

    &.ui-btn-dashed {
      border-right: $btn-border-width dashed;
    }
  }
}

@mixin btn-dashed($border-color, $hover-border: lighten($border-color, 10%)) {
  color: $border-color;
  background: none;
  border-color: $border-color;
  border-style: dashed;
  &:hover {
    color: $border-color;
    background: none;
    border-color: $hover-border;
  }
  &:focus,
  &.focus {
    color: $border-color;
    background: none;
    border-color: $hover-border;
  }
  &:disabled,
  &.ui-btn-disabled {
    color: $border-color;
    background: none;
    border-color: $border-color;
  }
}

@mixin button-style(
  $background,
  $border,
  $color,
  $hover-background: lighten($background, 7.5%),
  $hover-border: lighten($border, 10%),
  $hover-color: $color,
) {
  color: $color;
  background: $background;
  border-color: $border;
  &:hover {
    color: $hover-color;
    background: $hover-background;
    border-color: $hover-border;
  }
  &:focus,
  &.focus {
    color: $hover-color;
    background: $hover-background;
    border-color: $hover-border;
  }
  &:disabled,
  &.ui-btn-disabled {
    color: $color;
    background: $background;
    border-color: $border;
  }
}

@mixin zoom-animation(
  $direction: 'top',
  $scaleStart: scaleY(0),
  $scaleEnd: scaleY(1),
  $origin: center top
) {
  .zoom-in-#{$direction}-enter {
    opacity: 0;
    transform: $scaleStart;
  }
  .zoom-in-#{$direction}-enter-active {
    opacity: 1;
    transform: $scaleEnd;
    transition: transform 300ms cubic-bezier(.23, 1, .32, 1) 100ms, opacity 300ms cubic-bezier(.23, 1, .32, 1) 100ms;
    transform-origin: $origin;
  }
  .zoom-in-#{$direction}-exit {
    opacity: 1;
  }
  .zoom-in-#{$direction}-exit-active {
    opacity: 0;
    transform: $scaleStart;
    transition: transform 300ms cubic-bezier(.23, 1, .32, 1) 100ms, opacity 300ms cubic-bezier(.23, 1, .32, 1) 100ms;
    transform-origin: $origin;
  }
}

@mixin notification-style($prefix) {
  .#{$prefix} {
    position: fixed;
    z-index: 1000;
  }
  .#{$prefix}-notice {
    padding: 7px 20px 7px 10px;
    border-radius: 3px 3px;
    border: 1px solid #999;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    border: 0px solid rgba(0, 0, 0, 0);
    background: #fff;
    display: block;
    width: auto;
    line-height: 1.5;
    position: relative;
    margin: 10px 0;
  }
  .#{$prefix}-notice-closable {
    padding-right: 20px;
  }
  .#{$prefix}-notice-close {
    position: absolute;
    right: 5px;
    top: 3px;
    color: #000;
    cursor: pointer;
    outline: none;
    font-size: 1rem;
    font-weight: 700;
    line-height: 1;
    text-shadow: 0 1px 0 #fff;
    filter: alpha(opacity=20);
    opacity: 0.2;
    text-decoration: none;
  }
  .#{$prefix}-notice-close-x:after {
    content: 'Ã—';
  }
  .#{$prefix}-notice-close:hover {
    opacity: 1;
    filter: alpha(opacity=100);
    text-decoration: none;
  }
}

@mixin notification-default-animation($prefix) {
  .#{$prefix}-fade-appear,
  .#{$prefix}-fade-enter {
    opacity: 0;
    animation-duration: 0.3s;
    animation-fill-mode: both;
    animation-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2);
    animation-play-state: paused;
  }
  .#{$prefix}-fade-leave {
    animation-duration: 0.3s;
    animation-fill-mode: both;
    animation-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2);
    animation-play-state: paused;
  }
  .#{$prefix}-fade-appear.#{$prefix}-fade-appear-active,
  .#{$prefix}-fade-enter.#{$prefix}-fade-enter-active {
    animation-name: animation-fade-in;
    animation-play-state: running;
  }
  .#{$prefix}-fade-leave.#{$prefix}-fade-leave-active {
    animation-name: animation-fade-out;
    animation-play-state: running;
  }
}

@mixin notification-zoom-animation(
  $prefix,
  $origin,
  $scaleStart: scaleX(0),
  $scaleEnd: scaleX(1),
  ) {
  .#{$prefix}-fade-appear,
  .#{$prefix}-fade-enter {
    opacity: 0;
    transform: $scaleStart;
  }
  .#{$prefix}-fade-appear-active,
  .#{$prefix}-fade-enter-active {
    opacity: 1;
    transform: $scaleEnd;
    transition: transform 300ms cubic-bezier(.23, 1, .32, 1) 100ms, opacity 300ms cubic-bezier(.23, 1, .32, 1) 100ms;
    transform-origin: $origin;
  }
  .#{$prefix}-fade-leave {
    opacity: 1;
  }
  .#{$prefix}-fade-leave-active {
    opacity: 0;
    transform: $scaleStart;
    transition: transform 300ms cubic-bezier(.23, 1, .32, 1) 100ms, opacity 300ms cubic-bezier(.23, 1, .32, 1) 100ms;
    transform-origin: $origin;
  }
}